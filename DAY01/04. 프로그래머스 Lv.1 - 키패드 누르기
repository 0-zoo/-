# https://school.programmers.co.kr/learn/courses/30/lessons/67256

keypad = {1: 0,  2: 1,   3: 2,
          4: 3,  5: 4,   6: 5,
          7: 6,  8: 7,   9: 8,
        '*': 9,  0:10, '#':11}

memo = [[1, 2, 3, 4],
        [0, 1, 2, 3],
        [1, 2, 3, 4],
        [2, 1, 2, 3],
        [1, 0, 1, 2],
        [2, 1, 2, 3],
        [3, 2, 1, 2],
        [2, 1, 0, 1],
        [3, 2, 1, 2],
        [4, 3, 2, 1],
        [3, 2, 1, 0],
        [4, 3, 2, 1]]

def solution(numbers, hand):
    answer = []
    left  = 9  # 왼손 시작 위치
    right = 11 # 오른손 시작 위치
    
    for number in numbers:
        h = keypad.get(number) # 입력할 숫자의 해시값

        if h in [0, 3, 6, 9]:
            answer += 'L'
            left =  h
        elif h in [2, 5, 8, 11]:
            answer += 'R'
            right = h
        else:
            l_dist = memo[left][h//3]
            r_dist = memo[right][h//3]
            if l_dist < r_dist:
                answer += 'L'
                left = h
            elif l_dist > r_dist:
                answer += 'R'
                right = h
            elif hand == 'left':
                answer += 'L'
                left = h
            else:
                answer += 'R'
                right = h

    
    return ''.join(answer)


# 모든 경우의 수에 대하여 고려하였는지 확인해야 한다. 
# 처음 풀이가 틀린 이유는 왼쪽에서 가운데, 오른쪽에서 가운데로 가는 경우는 고려하였으나 가운데에서 가운데로 가는 경우를 고려하지 않아서 이다.
# 시험을 볼 때는 디버깅을 할 수 없으므로 자료형에 따른 출력 형태, 자료형에 따른 사용 가능한 함수 등을 상황별로 잘 정리해놓고 숙지해야 한다.
