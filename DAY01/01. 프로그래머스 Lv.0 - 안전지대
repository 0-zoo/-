# https://school.programmers.co.kr/learn/courses/30/lessons/120866
# 지뢰가 있는 지역과 지뢰에 인접한 위, 아래, 좌, 우 대각선 칸을 모두 위험지역으로 분류한다.
# 지뢰는 2차원 배열 board에 1로 표시되어 있고 board에는 지뢰가 매설 된 지역 1과, 지뢰가 없는 지역 0만 존재한다.
# 지뢰가 매설된 지역의 지도 board가 매개변수로 주어질 때, 안전한 지역의 칸 수를 return하도록 solution 함수를 완성하라.

dr = [-1, -1, 0, 1, 1, 1, 0, -1] 
dc = [0, 1, 1, 1, 0, -1, -1, -1]

def solution(board):
    answer = 0
    n = len(board)
    # check = [[0] * n] * n -> 다중 배열을 초기화 할때는 절대 이 방법으로 초기화하지 말자! 얕은 복사 때문에 자꾸 틀린 값이 나온다.
    check = [[0 for _ in range(n)] for _ in range(n)]

    for i in range(n):
        for j in range(n):
            if board[i][j] == 1:
                check[i][j] = 1
                for k in range(8):# 8방향
                    nr = i + dr[k]
                    nc = j + dc[k]
                    if 0 <= nr < n and 0 <= nc < n:
                        check[nr][nc] = 1

    for i in range(n):
        for j in range(n):
            if check[i][j] == 0:
                answer += 1

    return answer
